import { ReactNode } from 'react'
import { IconX, IconAlertTriangle, IconInfoCircle, IconCheck } from '@tabler/icons-react'
import Button from './Button'

interface StorageAlertModalProps {
  isOpen: boolean
  onClose: () => void
  onContinue: () => void
  storageMethod: string
  traumaType: 'fracture' | 'avulsion'
  alertType?: 'incorrect' | 'correct' // Novo prop para diferenciar o tipo de alerta
}

const StorageAlertModal = ({
  isOpen,
  onClose,
  onContinue,
  storageMethod,
  traumaType,
  alertType = 'incorrect' // Padr√£o para manter compatibilidade
}: StorageAlertModalProps) => {
  if (!isOpen) return null

  const getAlertContent = () => {
    // Para armazenamento CORRETO
    if (alertType === 'correct') {
      if (traumaType === 'fracture') {
        if (storageMethod === 'milk') {
          return {
            title: '‚úÖ EXCELENTE: Armazenamento Correto!',
            message: 'O fragmento do dente est√° sendo armazenado em LEITE, que √© o meio ideal para preserva√ß√£o.',
            instructions: [
              '‚úÖ Leite mant√©m as c√©lulas do dente vivas',
              '‚úÖ Continue usando LEITE FRESCO',
              '‚úÖ N√ÉO mude para √°gua ou papel seco',
              '‚úÖ Mantenha em temperatura ambiente',
              'üö® Procure um dentista URGENTEMENTE'
            ],
            urgency: 'URGENTE',
            icon: 'success'
          }
        } else if (storageMethod === 'saline') {
          return {
            title: '‚úÖ EXCELENTE: Armazenamento Correto!',
            message: 'O fragmento do dente est√° sendo armazenado em SOLU√á√ÉO FISIOL√ìGICA, que √© ideal para preserva√ß√£o.',
            instructions: [
              '‚úÖ Soro fisiol√≥gico preserva as c√©lulas',
              '‚úÖ Continue usando SOLU√á√ÉO FISIOL√ìGICA',
              '‚úÖ N√ÉO mude para √°gua ou papel seco',
              '‚úÖ Mantenha em temperatura ambiente',
              'üö® Procure um dentista URGENTEMENTE'
            ],
            urgency: 'URGENTE',
            icon: 'success'
          }
        } else if (storageMethod === 'saliva') {
          return {
            title: '‚úÖ BOM: Armazenamento Adequado!',
            message: 'O fragmento do dente est√° sendo mantido na BOCA, que √© uma op√ß√£o adequada.',
            instructions: [
              '‚úÖ Saliva mant√©m o fragmento √∫mido',
              '‚úÖ Continue mantendo na BOCA',
              '‚úÖ N√ÉO mude para √°gua ou papel seco',
              '‚úÖ Evite engolir o fragmento',
              'üö® Procure um dentista URGENTEMENTE'
            ],
            urgency: 'URGENTE',
            icon: 'success'
          }
        }
      }

      if (traumaType === 'avulsion') {
        if (storageMethod === 'milk') {
          return {
            title: '‚úÖ EXCELENTE: Armazenamento Correto!',
            message: 'O dente est√° sendo armazenado em LEITE, que √© o meio ideal para reimplante.',
            instructions: [
              '‚úÖ Leite preserva o ligamento periodontal',
              '‚úÖ Continue usando LEITE FRESCO',
              '‚úÖ N√ÉO mude para √°gua ou papel seco',
              '‚úÖ Mantenha em temperatura ambiente',
              'üö® Procure um dentista IMEDIATAMENTE (m√°ximo 30 min)'
            ],
            urgency: 'MUITO URGENTE',
            icon: 'success'
          }
        } else if (storageMethod === 'saline') {
          return {
            title: '‚úÖ EXCELENTE: Armazenamento Correto!',
            message: 'O dente est√° sendo armazenado em SOLU√á√ÉO FISIOL√ìGICA, que √© ideal para reimplante.',
            instructions: [
              '‚úÖ Soro fisiol√≥gico preserva o ligamento',
              '‚úÖ Continue usando SOLU√á√ÉO FISIOL√ìGICA',
              '‚úÖ N√ÉO mude para √°gua ou papel seco',
              '‚úÖ Mantenha em temperatura ambiente',
              'üö® Procure um dentista IMEDIATAMENTE (m√°ximo 30 min)'
            ],
            urgency: 'MUITO URGENTE',
            icon: 'success'
          }
        } else if (storageMethod === 'saliva') {
          return {
            title: '‚úÖ BOM: Armazenamento Adequado!',
            message: 'O dente est√° sendo mantido na BOCA, que √© uma op√ß√£o adequada para reimplante.',
            instructions: [
              '‚úÖ Saliva mant√©m o dente √∫mido',
              '‚úÖ Continue mantendo na BOCA',
              '‚úÖ N√ÉO mude para √°gua ou papel seco',
              '‚úÖ Evite engolir o dente',
              'üö® Procure um dentista IMEDIATAMENTE (m√°ximo 30 min)'
            ],
            urgency: 'MUITO URGENTE',
            icon: 'success'
          }
        }
      }
    }

    // Para armazenamento INCORRETO (c√≥digo existente)
    if (traumaType === 'fracture') {
      if (storageMethod === 'water') {
        return {
          title: '‚ö†Ô∏è ATEN√á√ÉO: Armazenamento Incorreto!',
          message: 'O fragmento do dente est√° sendo armazenado em √ÅGUA, que n√£o √© o meio ideal.',
          instructions: [
            '‚ùå √Ågua pode danificar as c√©lulas do dente',
            '‚úÖ Transfira imediatamente para LEITE FRESCO',
            '‚úÖ Ou use SOLU√á√ÉO FISIOL√ìGICA (soro)',
            '‚úÖ Ou mantenha na BOCA (entre bochecha e dentes)',
            'üö® Procure um dentista URGENTEMENTE'
          ],
          urgency: 'MUITO URGENTE',
          icon: 'warning'
        }
      } else if (storageMethod === 'paper') {
        return {
          title: '‚ö†Ô∏è ATEN√á√ÉO: Armazenamento Incorreto!',
          message: 'O fragmento do dente est√° sendo armazenado em PAPEL/PANO SECO, que pode danificar o tecido.',
          instructions: [
            '‚ùå Papel/pano seco desidrata o fragmento',
            '‚úÖ Transfira imediatamente para LEITE FRESCO',
            '‚úÖ Ou use SOLU√á√ÉO FISIOL√ìGICA (soro)',
            '‚úÖ Ou mantenha na BOCA (entre bochecha e dentes)',
            'üö® Procure um dentista URGENTEMENTE'
          ],
          urgency: 'MUITO URGENTE',
          icon: 'warning'
        }
      }
    }

    if (traumaType === 'avulsion') {
      if (storageMethod === 'water') {
        return {
          title: 'üö® EMERG√äNCIA: Armazenamento Incorreto!',
          message: 'O dente est√° sendo armazenado em √ÅGUA, que pode comprometer o reimplante!',
          instructions: [
            '‚ùå √Ågua destr√≥i as c√©lulas do ligamento periodontal',
            '‚úÖ Transfira IMEDIATAMENTE para LEITE FRESCO',
            '‚úÖ Ou use SOLU√á√ÉO FISIOL√ìGICA (soro)',
            '‚úÖ Ou mantenha na BOCA (entre bochecha e dentes)',
            'üö® Procure um dentista IMEDIATAMENTE (m√°ximo 30 min)'
          ],
          urgency: 'EMERG√äNCIA',
          icon: 'error'
        }
      } else if (storageMethod === 'paper') {
        return {
          title: 'üö® EMERG√äNCIA: Armazenamento Incorreto!',
          message: 'O dente est√° sendo armazenado em PAPEL/PANO SECO, que pode inviabilizar o reimplante!',
          instructions: [
            '‚ùå Papel/pano seco desidrata completamente o dente',
            '‚úÖ Transfira IMEDIATAMENTE para LEITE FRESCO',
            '‚úÖ Ou use SOLU√á√ÉO FISIOL√ìGICA (soro)',
            '‚úÖ Ou mantenha na BOCA (entre bochecha e dentes)',
            'üö® Procure um dentista IMEDIATAMENTE (m√°ximo 30 min)'
          ],
          urgency: 'EMERG√äNCIA',
          icon: 'error'
        }
      }
    }

    return null
  }

  const content = getAlertContent()

  if (!content) return null

  const handleContinue = () => {
    onContinue()
    onClose()
  }

  const getIcon = () => {
    switch (content.icon) {
      case 'success':
        return <IconCheck size={48} />
      case 'warning':
        return <IconAlertTriangle size={48} />
      case 'error':
        return <IconAlertTriangle size={48} />
      default:
        return <IconInfoCircle size={48} />
    }
  }

  return (
    <div className="storage-alert-modal-overlay" onClick={onClose}>
      <div className={`storage-alert-modal-content ${alertType === 'incorrect' ? 'incorrect' : ''}`} onClick={(e) => e.stopPropagation()}>
        <button className="storage-alert-modal-close" onClick={onClose}>
          <IconX size={24} />
        </button>
        
        <div className="storage-alert-modal-header">
          <div className="storage-alert-modal-icon">
            {getIcon()}
          </div>
          <h3 className="storage-alert-modal-title">{content.title}</h3>
          <div className={`storage-alert-modal-urgency ${content.urgency === 'EMERG√äNCIA' ? 'emergency' : content.urgency === 'MUITO URGENTE' ? 'urgent' : ''}`}>
            {content.urgency}
          </div>
        </div>
        
        <div className="storage-alert-modal-body">
          <p className="storage-alert-modal-message">{content.message}</p>
          
          <div className="storage-alert-modal-instructions">
            <h4>{alertType === 'correct' ? 'Continue fazendo:' : 'O que fazer AGORA:'}</h4>
            <ul>
              {content.instructions.map((instruction, index) => (
                <li key={index} className="storage-alert-modal-instruction">
                  {instruction}
                </li>
              ))}
            </ul>
          </div>

          <div className="storage-alert-modal-warning">
            <IconInfoCircle size={20} />
            <p>
              {alertType === 'correct' 
                ? 'Voc√™ est√° fazendo o correto! N√£o mude o m√©todo de armazenamento para evitar riscos de perda do dente/fragmento.'
                : 'O tempo √© crucial! Quanto mais r√°pido voc√™ agir, maiores as chances de sucesso do tratamento.'
              }
            </p>
          </div>
        </div>
        
        <div className="storage-alert-modal-actions">
          <Button
            variant={alertType === 'correct' ? 'primary' : 'error'}
            size="lg"
            onClick={handleContinue}
            className="storage-alert-modal-continue"
          >
            Entendi - Continuar
          </Button>
        </div>
      </div>
    </div>
  )
}

export default StorageAlertModal
